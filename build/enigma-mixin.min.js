!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self)["enigma-mixin"]=t()}(this,function(){"use strict";var e={sessionList:{qInfo:{qId:"",qType:"SessionLists"},qSelectionObjectDef:{}},variableList:{qInfo:{qType:"VariableList"},qVariableListDef:{qType:"variable"}}};async function t(){let t=await _this.api.createSessionObject(e.sessionList);return await t.getLayout()}return{types:["Doc"],init(e){_this=e,ConfiguredPromise=e.config.Promise},extend:{mixin:{qVariables:{getAllVariables:async function({qDoc:t,showSession:i=!1,showConfig:a=!1,showReserved:n=!1}){let s=e.variableList;s.qShowSession=i,s.qShowConfig=a,s.qShowReserved=n;let o=await t.createSessionObject(s);return await o.getLayout()},updateVariable:async function({qDoc:e,variable:t}){let i=await e.getVariableById(t.qInfo.qId);return await i.setProperties(t)},createVariable:async function({qDoc:e,variableName:t,variableComment:i="",variableDefinition:a}){let n={qInfo:{qType:"variable"},qName:t,qComment:i,qDefinition:a};return await doc.createVariableEx(n)}},qSelections:{getCurrSelectionFields:t,selectInField:async function({fieldName:e,values:t,toggle:i=!1}){let a=await _this.api.getField(e),n=t.map(function(e){return{qText:e}});try{return await a.selectValues({qFieldValues:n,qToggleMode:i})}catch(e){return console.log(e.message),!1}},getCurrentSelections:async function(){let e=await t(),i=e.qSelectionObject.qSelections.map(function(e){return e.qField});return{selections:e.qSelectionObject.qSelections,fields:i}}},qTablesAndFields:{getTablesAndKeys:async function(e){let t=await e.getTablesAndKeys({},{},0,!0,!1),i=[];for(let e of t.qtr)for(let t of e.qFields)i.push({table:e.qName,field:t.qName});return{tables:t,fields:i}},getTablesAndFields:async function(e){let t=await e.getTablesAndKeys({},{},0,!0,!1),i=[];for(let e of t.qtr)for(let t of e.qFields)i.push({table:e.qName,field:t.qName});return i},getTables:async function(e){let t=await e.getTablesAndKeys({},{},0,!0,!1),i=[];for(let e of t.qtr)i.push(e.qName);return i},getFields:async function(e){let t=await e.getTablesAndKeys({},{},0,!0,!1),i=[];for(let e of t.qtr)for(let t of e.qFields)i.push(t.qName);return i}}}}}});
//# sourceMappingURL=enigma-mixin.min.js.map
