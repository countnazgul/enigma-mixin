{"version":3,"file":"enigma-mixin.js","sources":["../src/mixins/doc/object-definitions.js","../src/mixins/doc/qVariables.js","../src/mixins/doc/qSelections.js","../src/mixins/doc/qTablesAndFields.js","../src/mixins/doc/extension-objects.js","../src/lib/helpers.js","../src/mixins/doc/unbuild.js","../src/mixins/doc/build.js","../src/main.js"],"sourcesContent":["const sessionList = {\r\n    \"qInfo\": {\r\n        \"qId\": \"\",\r\n        \"qType\": \"SessionLists\"\r\n    },\r\n    \"qSelectionObjectDef\": {}\r\n}\r\n\r\nconst variableList = {\r\n    \"qInfo\": {\r\n        \"qType\": \"VariableList\"\r\n    },\r\n    \"qVariableListDef\": {\r\n        \"qType\": \"variable\"\r\n    }\r\n}\r\n\r\nconst listBox = {\r\n    \"qInfo\": {\r\n        \"qId\": \"\",\r\n        \"qType\": \"Combo\"\r\n    },\r\n    \"field\": {\r\n        \"qListObjectDef\": {\r\n            \"qStateName\": \"$\",\r\n            \"qDef\": {\r\n                \"qFieldDefs\": [],\r\n                \"qSortCriterias\": [{\r\n                    \"qSortByState\": 1,\r\n                    \"qExpression\": {}\r\n                }]\r\n            },\r\n            \"qInitialDataFetch\": [{\r\n                \"qTop\": 0,\r\n                \"qLeft\": 0,\r\n                \"qHeight\": 100,\r\n                \"qWidth\": 1\r\n            }]\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    sessionList,\r\n    variableList,\r\n    listBox\r\n}","const objectDefinitions = require('./object-definitions.js');\r\n\r\nasync function mGetVariablesAll({ showSession = false, showConfig = false, showReserved = false } = {}) {\r\n    let objProp = objectDefinitions.variableList\r\n    objProp.qShowSession = showSession\r\n    objProp.qShowConfig = showConfig\r\n    objProp.qShowReserved = showReserved\r\n\r\n    try {\r\n        let sessionObj = await this.createSessionObject(objProp)\r\n        let sessionObjLayout = await sessionObj.getLayout()\r\n        return sessionObjLayout.qVariableList.qItems\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\nasync function mUpdateVariable(variable) {\r\n    try {\r\n        let variableContent = await this.getVariableById(variable.qInfo.qId)\r\n        let newContent = await variableContent.setProperties(variable)\r\n\r\n        return newContent\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\nasync function mCreateVariable({ name, comment = '', definition }) {\r\n\r\n    let varProps = {\r\n        \"qInfo\": {\r\n            \"qType\": \"variable\"\r\n        },\r\n        \"qName\": name,\r\n        \"qComment\": comment,\r\n        \"qDefinition\": definition\r\n    }\r\n\r\n    try {\r\n        let result = await this.createVariableEx(varProps)\r\n        return result\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    mGetVariablesAll,\r\n    mUpdateVariable,\r\n    mCreateVariable\r\n}\r\n","const objectDefinitions = require('./object-definitions.js')\r\n\r\nasync function iGetSelectionsNative(qDoc) {\r\n    try {\r\n        let sessionObj = await qDoc.createSessionObject(objectDefinitions.sessionList)\r\n        let selections = await sessionObj.getLayout()\r\n        return selections\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n\r\n}\r\n\r\nasync function mGetSelectionsCurrNative() {\r\n    try {\r\n        let selections = await iGetSelectionsNative(this)\r\n        return selections\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\n/**\r\n * Get current selections\r\n */\r\nasync function mGetSelectionsCurr() {\r\n    try {\r\n        let selections = await iGetSelectionsNative(this)\r\n\r\n        let fieldsSelected = selections.qSelectionObject.qSelections.map(function (s) {\r\n            return s.qField\r\n        })\r\n\r\n        return { selections: selections.qSelectionObject.qSelections, fields: fieldsSelected }\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\n/**\r\n * Select value(s) in a field\r\n * @param {string} fieldName - Name of the field\r\n * @param {array} values - String array with the values to be selected\r\n * @param {boolean} [toggle=false] toggle - How to apply the selection\r\n */\r\nasync function mSelectInField({ fieldName, values, toggle = false }) {\r\n\r\n    try {\r\n        let field = await this.getField(fieldName)\r\n\r\n        let valuesToSelect = values.map(function (v) {\r\n            return {\r\n                qText: v\r\n            }\r\n        })\r\n\r\n        try {\r\n            let selection = await field.selectValues({ qFieldValues: valuesToSelect, qToggleMode: toggle })\r\n            return selection\r\n        } catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    mGetSelectionsCurr,\r\n    mGetSelectionsCurrNative,\r\n    mSelectInField\r\n}\r\n","const objectDefinitions = require('./object-definitions.js')\r\n\r\nasync function mGetTablesAndFields() {\r\n\r\n    try {\r\n        let tables = await this.getTablesAndKeys({}, {}, 0, true, false)\r\n\r\n        let f = [];\r\n\r\n        if (tables.qtr.length == 0) {\r\n            return f\r\n        } else {\r\n            for (let table of tables.qtr) {\r\n                for (let field of table.qFields) {\r\n                    f.push({ table: table.qName, field: field.qName })\r\n                }\r\n            }\r\n\r\n            return f\r\n        }\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\nasync function mGetTables() {\r\n    try {\r\n        let qTables = await this.getTablesAndKeys({}, {}, 0, true, false)\r\n\r\n        let tables = [];\r\n\r\n        if (qTables.length == 0) {\r\n            return tables\r\n        } else {\r\n            for (let table of qTables.qtr) {\r\n                tables.push(table.qName)\r\n            }\r\n\r\n            return tables\r\n        }\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\nasync function mGetFields() {\r\n    try {\r\n\r\n        let qTables = await this.getTablesAndKeys({}, {}, 0, true, false)\r\n\r\n        let fields = [];\r\n\r\n        for (let table of qTables.qtr) {\r\n            for (let field of table.qFields) {\r\n                fields.push(field.qName)\r\n            }\r\n        }\r\n\r\n        return fields\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\nasync function mGetListbox(fieldName) {\r\n\r\n    try {\r\n        let lbDef = objectDefinitions.listBox\r\n        lbDef.field.qListObjectDef.qDef.qFieldDefs.push(fieldName)\r\n        let sessionObj = await this.createSessionObject(lbDef)\r\n        let fieldValues = await sessionObj.getLayout()\r\n        return fieldValues.field.qListObject\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    mGetTablesAndFields,\r\n    mGetTables,\r\n    mGetFields,\r\n    mGetListbox\r\n} ","const nonExtensionObjects = [\r\n    \"barchart\",\r\n    \"bookmark\",\r\n    \"combochart\",\r\n    \"dimension\",\r\n    \"embeddedsnapshot\",\r\n    \"filterpane\",\r\n    \"gauge\",\r\n    \"kpi\",\r\n    \"linechart\",\r\n    \"listbox\",\r\n    \"LoadModel\",\r\n    \"map\",\r\n    \"masterobject\",\r\n    \"measure\",\r\n    \"piechart\",\r\n    \"pivot-table\",\r\n    \"scatterplot\",\r\n    \"sheet\",\r\n    \"slide\",\r\n    \"slideitem\",\r\n    \"snapshot\",\r\n    \"story\",\r\n    \"StringExpression\",\r\n    \"table\",\r\n    \"treemap\"\r\n]\r\n\r\nasync function mGetAllExtensionObjects() {\r\n    let allInfos = await this.getAllInfos()\r\n    let extensionObjects = await filterOnlyExtensionObjects(this, allInfos)\r\n\r\n    return extensionObjects\r\n}\r\n\r\n\r\n\r\nasync function filterOnlyExtensionObjects(qDoc, allObjects) {\r\n    let possibleExtensionObjects = allObjects.filter(function (o) {\r\n        return nonExtensionObjects.indexOf(o.qType) == -1\r\n    })\r\n\r\n    let realExtensionObjects = []\r\n    if (possibleExtensionObjects.length > 0) {\r\n        for (let extObj of possibleExtensionObjects) {\r\n            let isReallyExtension = await realExtensionCheck(qDoc, extObj.qId)\r\n            if (isReallyExtension.isExtension) {\r\n                realExtensionObjects.push({\r\n                    appName: qDoc.id,\r\n                    objId: isReallyExtension.qObjProps.qInfo.qId,\r\n                    objType: isReallyExtension.qObjProps.qInfo.qType,\r\n                    extName: isReallyExtension.qObjProps.extensionMeta.name,\r\n                    extVersion: isReallyExtension.qObjProps.version,\r\n                    extVisible: isReallyExtension.qObjProps.extensionMeta.visible,\r\n                    extIsBundle: !isReallyExtension.qObjProps.extensionMeta.isThirdParty,\r\n                    extIsLibrary: isReallyExtension.qObjProps.extensionMeta.isLibraryItem,\r\n                    qProps: isReallyExtension.qObjProps\r\n                })\r\n            }\r\n        }\r\n\r\n        return realExtensionObjects\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nconst realExtensionCheck = async function (qDoc, objId) {\r\n    let isExtension = false\r\n    let qObjProps = {}\r\n\r\n    try {\r\n        let qObj = await qDoc.getObject(objId)\r\n\r\n        qObjProps = await qObj.getProperties()\r\n\r\n        if (qObjProps.extensionMeta) {\r\n            isExtension = true\r\n        }\r\n\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n    return { qObjProps, isExtension }\r\n}\r\n\r\nmodule.exports = {\r\n    mGetAllExtensionObjects\r\n}","const handlePromise = (promise) => {\r\n    return promise\r\n        .then(data => ([data, undefined]))\r\n        .catch(error => Promise.resolve([undefined, error]));\r\n}\r\n\r\nmodule.exports = {\r\n    handlePromise\r\n}","const objectDefinitions = require('./object-definitions.js');\r\nconst { handlePromise } = require('../../lib/helpers');\r\n\r\nasync function mUnbuild() {\r\n    return await Promise.all([\r\n        await unbuildVariables(this),\r\n        await unbuildScript(this),\r\n        await unbuildAppProperties(this),\r\n        await unbuildConnections(this),\r\n        await unbuildEntities(this)\r\n    ]).then((data) => ({\r\n        variables: data[0],\r\n        script: data[1],\r\n        appProperties: data[2],\r\n        connections: data[3],\r\n        dimensions: data[4].dimensions,\r\n        measures: data[4].measures,\r\n        objects: data[4].objects\r\n    }))\r\n}\r\n\r\nasync function unbuildVariables(app) {\r\n    let objProp = objectDefinitions.variableList\r\n    objProp.qShowSession = false\r\n    objProp.qShowConfig = false\r\n    objProp.qShowReserved = false\r\n\r\n    let [sessionObj, sessionObjErr] = await handlePromise(app.createSessionObject(objProp))\r\n    if (sessionObjErr) throw new Error('unbuild variables: cannot create session object');\r\n\r\n    let [sessionObjLayout, sessionObjLayoutErr] = await handlePromise(sessionObj.getLayout())\r\n    if (sessionObjLayoutErr) throw new Error('unbuild variables: cannot get session object layout');\r\n\r\n    let [delSessionObj, delSessionObjErr] = await handlePromise(app.destroySessionObject(sessionObj.id))\r\n    if (delSessionObjErr) throw new Error('unbuild variables: cannot delete session object');\r\n\r\n    return sessionObjLayout.qVariableList.qItems\r\n}\r\n\r\nasync function unbuildScript(app) {\r\n    let [script, scriptErr] = await handlePromise(app.getScript())\r\n    if (scriptErr) throw new Error('unbuild script: cannot fetch script');\r\n\r\n    return script\r\n}\r\n\r\nasync function unbuildAppProperties(app) {\r\n    let [appProperties, appPropertiesError] = await handlePromise(app.getAppProperties())\r\n    if (appPropertiesError) throw new Error('unbuild app properties: cannot fetch app properties');\r\n\r\n    return appProperties\r\n\r\n}\r\n\r\nasync function unbuildConnections(app) {\r\n    let [appConnections, appConnectionsErr] = await handlePromise(app.getConnections())\r\n    if (appConnectionsErr) throw new Error('unbuild connections: cannot fetch app connections');\r\n\r\n    return appConnections\r\n}\r\n\r\nasync function unbuildEntities(app) {\r\n    let data = {\r\n        dimensions: [],\r\n        measures: [],\r\n        objects: []\r\n    }\r\n\r\n    let errors = []\r\n\r\n    // get list of all objects\r\n    let [appAllInfos, appAllInfosErr] = await handlePromise(app.getAllInfos())\r\n    if (appAllInfosErr) throw new Error('unbuild app infos: cannot fetch all app infos')\r\n\r\n    return Promise.all(appAllInfos.map(async function (item) {\r\n        if (item.qType == 'dimension') {\r\n            let [dim, dimErr] = await handlePromise(app.getDimension(item.qId))\r\n            if (dimErr) throw new Error('unbuild dimension: cannot fetch dimension')\r\n\r\n            let [dimProp, dimPropErr] = await handlePromise(dim.getProperties())\r\n            if (dimPropErr) throw new Error('unbuild dimension: cannot fetch dimension properties')\r\n\r\n            data.dimensions.push(dimProp)\r\n        }\r\n\r\n        if (item.qType == 'measure') {\r\n            let [measure, measureErr] = await handlePromise(app.getMeasure(item.qId))\r\n            if (measureErr) throw new Error('unbuild dimension: cannot fetch measure')\r\n\r\n            let [measureProp, measurePropErr] = await handlePromise(measure.getProperties())\r\n            if (measurePropErr) throw new Error('unbuild dimension: cannot fetch measure properties')\r\n\r\n            data.measures.push(measureProp)\r\n        }\r\n\r\n        if (item.qType != 'dimension' && item.qType != 'measure') {\r\n            let o = await processObject(item, app)\r\n\r\n            if (!o.error) data.objects.push(o)\r\n            if (o.error) errors.push(o)\r\n        }\r\n    })).then(() => data)\r\n}\r\n\r\nasync function processObject(item, app) {\r\n    let [obj, objErr] = await handlePromise(app.getObject(item.qId))\r\n\r\n    // embeddedsnapshot, snapshot, hiddenbookmark, story --> need to be handled differently\r\n    if (objErr) return { ...item, error: true }\r\n\r\n    let [parent, parentErr] = await handlePromise(obj.getParent())\r\n    let [children, childrenErr] = await obj.getChildInfos()\r\n\r\n    if (childrenErr) throw new Error('unbuild entity: cannot fetch entity children')\r\n\r\n    // parent-less objects - masterobject, sheet, appprops, LoadModel\r\n    if (parentErr && children.length > 0) {\r\n        let [propTree, propTreeErr] = await handlePromise(obj.getFullPropertyTree())\r\n        if (propTreeErr) throw new Error('unbuild entity: cannot fetch entity full property tree')\r\n\r\n        return propTree\r\n    }\r\n\r\n    let [prop, propErr] = await handlePromise(obj.getProperties())\r\n    if (propErr) throw new Error('unbuild entity: cannot fetch entity properties')\r\n\r\n    return prop\r\n}\r\n\r\nmodule.exports = {\r\n    mUnbuild\r\n}","const { handlePromise } = require('../../lib/helpers');\r\n\r\nasync function mBuild({\r\n    variables = [],\r\n    script = false,\r\n    appProperties = {},\r\n    connections = [],\r\n    measures = [],\r\n    dimensions = [],\r\n    objects = [] }) {\r\n\r\n    let [appConnections, error] = await handlePromise(this.getConnections())\r\n    if (error) throw new Error('build: cannot get app connections')\r\n\r\n    return Promise.all([\r\n        await processMeasures(measures, this),\r\n        await processDimensions(dimensions, this),\r\n        await processVariables(variables, this),\r\n        await processScript(script, this),\r\n        await processAppProperties(appProperties, this),\r\n        await processConnections(appConnections, connections, this),\r\n        await processObjects(objects, this)\r\n    ]).then(function (d) {\r\n        return {\r\n            measures: d[0],\r\n            dimensions: d[1],\r\n            variables: d[2],\r\n            script: d[3],\r\n            appProperties: d[4],\r\n            connections: d[5],\r\n            objects: d[6]\r\n        }\r\n    })\r\n}\r\n\r\n\r\nasync function processMeasures(measures, app) {\r\n    return Promise.all(measures.map(async function (measure) {\r\n        let [obj, objErr] = await handlePromise(app.getMeasure(measure.qInfo.qId))\r\n\r\n        // the measure do not exists and need to be created\r\n        if (objErr) {\r\n            let [created, error] = await handlePromise(app.createMeasure(measure))\r\n            if (error) throw new Error(`build measure: cannot create measure \"${measure.qInfo.qId}\": ${error.message}`)\r\n\r\n            return { qId: measure.qInfo.qId, status: 'Created' }\r\n        }\r\n\r\n        // the measure exists and need to be updated\r\n        let [updated, error] = await handlePromise(obj.setProperties(measure))\r\n        if (error) throw new Error(`build measure: cannot update measure \"${measure.qInfo.qId}\": ${error.message}`)\r\n\r\n        return { qId: measure.qInfo.qId, status: 'Updated' }\r\n    }))\r\n}\r\n\r\nasync function processDimensions(dimensions, app) {\r\n    return Promise.all(dimensions.map(async function (dimension) {\r\n        let [obj, objErr] = await handlePromise(app.getDimension(dimension.qInfo.qId))\r\n\r\n        // the dimension do not exists and need to be created\r\n        if (objErr) {\r\n            let [created, error] = await handlePromise(app.createDimension(dimension))\r\n            if (error) throw new Error(`build dimension: cannot create dimension \"${dimension.qInfo.qId}\": ${error.message}`)\r\n\r\n            return { qId: dimension.qInfo.qId, status: 'Created' }\r\n        }\r\n\r\n        // the dimension exists and need to be updated\r\n        let [updated, error] = await handlePromise(obj.setProperties(measure))\r\n        if (error) throw new Error(`build dimension: cannot update dimension \"${dimension.qInfo.qId}\": ${error.message}`)\r\n\r\n        return { qId: dimension.qInfo.qId, status: 'Updated' }\r\n    }))\r\n}\r\n\r\nasync function processScript(script, app) {\r\n    let [s, error] = await handlePromise(app.setScript(script))\r\n    if (error) throw new Error(`build script: cannot set script: ${error.message}`)\r\n\r\n    return { status: 'Set' }\r\n}\r\n\r\nasync function processAppProperties(appProperties, app) {\r\n    let [update, error] = await handlePromise(app.setAppProperties(appProperties))\r\n    if (error) throw new Error(`build app properties: cannot set app properties: ${error.message}`)\r\n\r\n    return { status: 'Set' }\r\n}\r\n\r\nasync function processVariables(variables, app) {\r\n    return Promise.all(variables.map(async function (variable) {\r\n        let [qVar, qVarError] = await handlePromise(app.getVariableByName(variable.qName))\r\n\r\n        if (qVarError) {\r\n            let [created, error] = await handlePromise(app.createVariableEx(variable))\r\n            if (error) throw new Error(`build variable: cannot create variable \"${variable.qName}\": ${error.message}`)\r\n\r\n            return { qId: variable.qName, status: 'Created' }\r\n        }\r\n\r\n        let [updated, error] = await handlePromise(qVar.setProperties(variable))\r\n        if (error) throw new Error(`build variable: cannot update variable \"${variable.qName}\": ${error.message}`)\r\n\r\n        return { qId: variable.qName, status: 'Updated' }\r\n    }))\r\n}\r\n\r\nasync function processConnections(appConnections, connections, app) {\r\n    return Promise.all(connections.map(async function (connection) {\r\n        let conn = appConnections.find(o => o.qName === connection.qName)\r\n\r\n        if (!conn) {\r\n            let [create, error] = await handlePromise(app.createConnection(connection))\r\n            if (error) throw new Error(`build connection: cannot create connection \"${connection.qName}\": ${error.message}`)\r\n\r\n            return { qId: connection.qName, status: 'Created' }\r\n        }\r\n\r\n        let [modify, error] = await handlePromise(app.modifyConnection(conn.qId, connection, true))\r\n        if (error) throw new Error(`build connection: cannot modify connection \"${connection.qName}\": ${error.message}`)\r\n\r\n        return { qId: connection.qName, status: 'Updated' }\r\n\r\n    }))\r\n}\r\n\r\nasync function processObjects(objects, app) {\r\n    return Promise.all(objects.map(async function (object) {\r\n        let objId, objType\r\n        let isGenericObject = false;\r\n\r\n        //if the object is GenericObject - the id and the type are in a slightly different path\r\n        if (!object.qInfo) {\r\n            isGenericObject = true\r\n            objId = object.qProperty.qInfo.qId\r\n            objType = object.qProperty.qInfo.qType\r\n        } else {\r\n            objId = object.qInfo.qId\r\n            objType = object.qInfo.qType\r\n        }\r\n\r\n\r\n        let [obj, objError] = await handlePromise(app.getObject(objId))\r\n\r\n        if (!objError) {\r\n            // if its GenericObject we have to set the the props using setFullPropertyTree\r\n            if (isGenericObject) {\r\n                let [updated, error] = await handlePromise(obj.setFullPropertyTree(object))\r\n                if (error) throw new Error(`build object: cannot update object \"${objId}\": ${error.message}`)\r\n\r\n                return { qId: objId, status: 'Updated' }\r\n            }\r\n\r\n            // if not GenericObject then use the \"usual\" setProperties\r\n            if (!isGenericObject) {\r\n                let [updated, error] = await handlePromise(obj.setProperties(object))\r\n                if (error) throw new Error(`build object: cannot update object \"${objId}\": ${error.message}`)\r\n\r\n                return { qId: objId, status: 'Updated' }\r\n            }\r\n        }\r\n\r\n        // same rules are applied when we have to create the object\r\n        if (objError) {\r\n            if (isGenericObject) {\r\n\r\n                let [o, oError] = await handlePromise(app.createObject({\r\n                    qInfo: {\r\n                        qId: `${objId}`,\r\n                        qType: objType\r\n                    }\r\n                }))\r\n                if (oError) throw new Error(`build object: cannot create object \"${objId}\": ${oError.message}`)\r\n\r\n                let [updated, updatedError] = await handlePromise(o.setFullPropertyTree(object))\r\n                if (updatedError) throw new Error(`build object: cannot update object \"${objId}\": ${updatedError.message}`)\r\n\r\n                return { qId: objId, status: 'Created' }\r\n            }\r\n\r\n            if (!isGenericObject) {\r\n                let [created, createdError] = await handlePromise(app.createObject(object))\r\n                if (createdError) throw new Error(`build object: cannot create object: \"${objId}\": ${createdError.message}`)\r\n\r\n                return { qId: objId, status: 'Created' }\r\n            }\r\n        }\r\n    }))\r\n}\r\n\r\nmodule.exports = {\r\n    mBuild\r\n}\r\n","const qVariables = require('./mixins/doc/qVariables.js')\r\nconst qSelections = require('./mixins/doc/qSelections.js')\r\nconst qTablesAndFields = require('./mixins/doc/qTablesAndFields.js')\r\nconst extensionObjects = require('./mixins/doc/extension-objects.js')\r\n// const unbuildVariables = require('./mixins/doc/unbuild/variables.js')\r\n// const unbuildScript = require('./mixins/doc/unbuild/script.js')\r\n// const unbuildAppProperties = require('./mixins/doc/unbuild/appProperties.js')\r\n// const unbuildConnections = require('./mixins/doc/unbuild/connections.js')\r\n// const unbuildEntities = require('./mixins/doc/unbuild/entities.js')\r\nconst unbuild = require('./mixins/doc/unbuild.js')\r\nconst build = require('./mixins/doc/build.js')\r\n\r\nconst docMixin = [\r\n    {\r\n        types: ['Doc'],\r\n        init(args) {\r\n\r\n        },\r\n        extend: {\r\n            ...qSelections,\r\n            ...qTablesAndFields,\r\n            ...qVariables,\r\n            ...extensionObjects,\r\n            // ...unbuildVariables,\r\n            // ...unbuildScript,\r\n            // ...unbuildAppProperties,\r\n            // ...unbuildConnections,\r\n            // ...unbuildEntities,\r\n            ...unbuild,\r\n            ...build\r\n        },\r\n    }\r\n]\r\n\r\nmodule.exports = docMixin"],"names":["sessionList","variableList","listBox","mGetVariablesAll","showSession","showConfig","showReserved","objProp","objectDefinitions","qShowSession","qShowConfig","qShowReserved","sessionObj","createSessionObject","sessionObjLayout","getLayout","qVariableList","qItems","e","Error","message","mUpdateVariable","variable","variableContent","getVariableById","qInfo","qId","newContent","setProperties","mCreateVariable","name","comment","definition","varProps","result","createVariableEx","iGetSelectionsNative","qDoc","selections","mGetSelectionsCurrNative","mGetSelectionsCurr","fieldsSelected","qSelectionObject","qSelections","map","s","qField","fields","mSelectInField","fieldName","values","toggle","field","getField","valuesToSelect","v","qText","selection","selectValues","qFieldValues","qToggleMode","mGetTablesAndFields","tables","getTablesAndKeys","f","qtr","length","table","qFields","push","qName","mGetTables","qTables","mGetFields","mGetListbox","lbDef","qListObjectDef","qDef","qFieldDefs","fieldValues","qListObject","nonExtensionObjects","mGetAllExtensionObjects","allInfos","getAllInfos","extensionObjects","filterOnlyExtensionObjects","allObjects","possibleExtensionObjects","filter","o","indexOf","qType","realExtensionObjects","extObj","isReallyExtension","realExtensionCheck","isExtension","appName","id","objId","qObjProps","objType","extName","extensionMeta","extVersion","version","extVisible","visible","extIsBundle","isThirdParty","extIsLibrary","isLibraryItem","qProps","qObj","getObject","getProperties","handlePromise","promise","then","data","undefined","catch","error","Promise","resolve","require$$0","mUnbuild","all","unbuildVariables","unbuildScript","unbuildAppProperties","unbuildConnections","unbuildEntities","variables","script","appProperties","connections","dimensions","measures","objects","app","sessionObjErr","sessionObjLayoutErr","delSessionObj","delSessionObjErr","destroySessionObject","scriptErr","getScript","appPropertiesError","getAppProperties","appConnections","appConnectionsErr","getConnections","appAllInfos","appAllInfosErr","item","dim","dimErr","getDimension","dimProp","dimPropErr","measure","measureErr","getMeasure","measureProp","measurePropErr","processObject","errors","obj","objErr","parent","parentErr","getParent","children","childrenErr","getChildInfos","propTree","propTreeErr","getFullPropertyTree","prop","propErr","mBuild","processMeasures","processDimensions","processVariables","processScript","processAppProperties","processConnections","processObjects","d","created","createMeasure","status","updated","dimension","createDimension","setScript","update","setAppProperties","qVar","qVarError","getVariableByName","connection","conn","find","create","createConnection","modify","modifyConnection","object","isGenericObject","qProperty","objError","setFullPropertyTree","oError","createObject","updatedError","createdError","docMixin","types","init","args","extend","qTablesAndFields","qVariables","unbuild","build"],"mappings":"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"}