{"version":3,"file":"enigma-mixin.js","sources":["../src/mixins/object-definitions.js","../src/mixins/qVariables.js","../src/mixins/qSelections.js","../src/mixins/qTablesAndFields.js","../src/main.js"],"sourcesContent":["const sessionList = {\r\n    \"qInfo\": {\r\n        \"qId\": \"\",\r\n        \"qType\": \"SessionLists\"\r\n    },\r\n    \"qSelectionObjectDef\": {}\r\n}\r\n\r\nconst variableList = {\r\n    \"qInfo\": {\r\n        \"qType\": \"VariableList\"\r\n    },\r\n    \"qVariableListDef\": {\r\n        \"qType\": \"variable\"\r\n    }\r\n}\r\n\r\nconst listBox = {\r\n    \"qInfo\": {\r\n        \"qId\": \"\",\r\n        \"qType\": \"Combo\"\r\n    },\r\n    \"field\": {\r\n        \"qListObjectDef\": {\r\n            \"qStateName\": \"$\",\r\n            \"qDef\": {\r\n                \"qFieldDefs\": [],\r\n                \"qSortCriterias\": [{\r\n                    \"qSortByState\": 1,\r\n                    \"qExpression\": {}\r\n                }]\r\n            },\r\n            \"qInitialDataFetch\": [{\r\n                \"qTop\": 0,\r\n                \"qLeft\": 0,\r\n                \"qHeight\": 100,\r\n                \"qWidth\": 1\r\n            }]\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    sessionList,\r\n    variableList,\r\n    listBox\r\n}","const objectDefinitions = require('./object-definitions.js');\r\n\r\nasync function mGetVariablesAll({ showSession = false, showConfig = false, showReserved = false } = {}) {\r\n    let objProp = objectDefinitions.variableList\r\n    objProp.qShowSession = showSession\r\n    objProp.qShowConfig = showConfig\r\n    objProp.qShowReserved = showReserved\r\n\r\n    try {\r\n        let sessionObj = await this.createSessionObject(objProp)\r\n        let sessionObjLayout = await sessionObj.getLayout()\r\n        return sessionObjLayout.qVariableList.qItems\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\nasync function mUpdateVariable(variable) {\r\n    try {\r\n        let variableContent = await this.getVariableById(variable.qInfo.qId)\r\n        let newContent = await variableContent.setProperties(variable)\r\n\r\n        return newContent\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\nasync function mCreateVariable({ name, comment = '', definition }) {\r\n\r\n    let varProps = {\r\n        \"qInfo\": {\r\n            \"qType\": \"variable\"\r\n        },\r\n        \"qName\": name,\r\n        \"qComment\": comment,\r\n        \"qDefinition\": definition\r\n    }\r\n\r\n    try {\r\n        let result = await this.createVariableEx(varProps)\r\n        return result\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    mGetVariablesAll,\r\n    mUpdateVariable,\r\n    mCreateVariable\r\n}\r\n","const objectDefinitions = require('./object-definitions.js')\r\n\r\nasync function iGetSelectionsNative(qDoc) {\r\n    try {\r\n        let sessionObj = await qDoc.createSessionObject(objectDefinitions.sessionList)\r\n        let selections = await sessionObj.getLayout()\r\n        return selections\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n\r\n}\r\n\r\nasync function mGetSelectionsCurrNative() {\r\n    try {\r\n        let selections = await iGetSelectionsNative(this)\r\n        return selections\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\n/**\r\n * Get current selections\r\n */\r\nasync function mGetSelectionsCurr() {\r\n    try {\r\n        let selections = await iGetSelectionsNative(this)\r\n\r\n        let fieldsSelected = selections.qSelectionObject.qSelections.map(function (s) {\r\n            return s.qField\r\n        })\r\n\r\n        return { selections: selections.qSelectionObject.qSelections, fields: fieldsSelected }\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\n/**\r\n * Select value(s) in a field\r\n * @param {string} fieldName - Name of the field\r\n * @param {array} values - String array with the values to be selected\r\n * @param {boolean} [toggle=false] toggle - How to apply the selection\r\n */\r\nasync function mSelectInField({ fieldName, values, toggle = false }) {\r\n\r\n    try {\r\n        let field = await this.getField(fieldName)\r\n\r\n        let valuesToSelect = values.map(function (v) {\r\n            return {\r\n                qText: v\r\n            }\r\n        })\r\n\r\n        try {\r\n            let selection = await field.selectValues({ qFieldValues: valuesToSelect, qToggleMode: toggle })\r\n            return selection\r\n        } catch (e) {\r\n            return { error: e.message }\r\n        }\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    mGetSelectionsCurr,\r\n    mGetSelectionsCurrNative,\r\n    mSelectInField\r\n}\r\n","const objectDefinitions = require('./object-definitions.js')\r\n\r\nasync function mGetTablesAndFields() {\r\n\r\n    try {\r\n        let tables = await this.getTablesAndKeys({}, {}, 0, true, false)\r\n\r\n        let f = [];\r\n\r\n        if (tables.qtr.length == 0) {\r\n            return f\r\n        } else {\r\n            for (let table of tables.qtr) {\r\n                for (let field of table.qFields) {\r\n                    f.push({ table: table.qName, field: field.qName })\r\n                }\r\n            }\r\n\r\n            return f\r\n        }\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\nasync function mGetTables() {\r\n    try {\r\n        let qTables = await this.getTablesAndKeys({}, {}, 0, true, false)\r\n\r\n        let tables = [];\r\n\r\n        if (qTables.length == 0) {\r\n            return tables\r\n        } else {\r\n            for (let table of qTables.qtr) {\r\n                tables.push(table.qName)\r\n            }\r\n\r\n            return tables\r\n        }\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\nasync function mGetFields() {\r\n    try {\r\n\r\n        let qTables = await this.getTablesAndKeys({}, {}, 0, true, false)\r\n\r\n        let fields = [];\r\n\r\n        for (let table of qTables.qtr) {\r\n            for (let field of table.qFields) {\r\n                fields.push(field.qName)\r\n            }\r\n        }\r\n\r\n        return fields\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n}\r\n\r\nasync function mGetListbox(fieldName) {\r\n\r\n    try {\r\n        let lbDef = objectDefinitions.listBox\r\n        lbDef.field.qListObjectDef.qDef.qFieldDefs.push(fieldName)\r\n        let sessionObj = await this.createSessionObject(lbDef)\r\n        let fieldValues = await sessionObj.getLayout()\r\n        return fieldValues.field.qListObject\r\n    } catch (e) {\r\n        return { error: e.message }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    mGetTablesAndFields,\r\n    mGetTables,\r\n    mGetFields,\r\n    mGetListbox\r\n} ","const qVariables = require('./mixins/qVariables.js')\r\nconst qSelections = require('./mixins/qSelections.js')\r\nconst qTablesAndFields = require('./mixins/qTablesAndFields.js')\r\n\r\nconst docMixin = {\r\n    types: ['Doc'],\r\n    init(args) {\r\n\r\n    },\r\n    extend: {\r\n        ...qSelections,\r\n        ...qTablesAndFields,\r\n        ...qVariables\r\n    },\r\n};\r\n\r\nmodule.exports = docMixin"],"names":["sessionList","variableList","listBox","mGetVariablesAll","showSession","showConfig","showReserved","objProp","objectDefinitions","qShowSession","qShowConfig","qShowReserved","sessionObj","createSessionObject","sessionObjLayout","getLayout","qVariableList","qItems","e","error","message","mUpdateVariable","variable","variableContent","getVariableById","qInfo","qId","newContent","setProperties","mCreateVariable","name","comment","definition","varProps","result","createVariableEx","iGetSelectionsNative","qDoc","selections","mGetSelectionsCurrNative","mGetSelectionsCurr","fieldsSelected","qSelectionObject","qSelections","map","s","qField","fields","mSelectInField","fieldName","values","toggle","field","getField","valuesToSelect","v","qText","selection","selectValues","qFieldValues","qToggleMode","mGetTablesAndFields","tables","getTablesAndKeys","f","qtr","length","table","qFields","push","qName","mGetTables","qTables","mGetFields","mGetListbox","lbDef","qListObjectDef","qDef","qFieldDefs","fieldValues","qListObject","docMixin","types","init","args","extend","qTablesAndFields","qVariables"],"mappings":"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"}