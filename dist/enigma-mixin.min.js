!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self)["enigma-mixin"]=t()}(this,function(){"use strict";var e={sessionList:{qInfo:{qId:"",qType:"SessionLists"},qSelectionObjectDef:{}},variableList:{qInfo:{qType:"VariableList"},qVariableListDef:{qType:"variable"}}};return{types:["Doc"],init(e){},extend:{...{mGetCurrSelectionFields:async function(){let t=await this.createSessionObject(e.sessionList);return await t.getLayout()},mSelectInField:async function({fieldName:e,values:t,toggle:i=!1}){let a=await this.getField(e),n=t.map(function(e){return{qText:e}});try{return await a.selectValues({qFieldValues:n,qToggleMode:i})}catch(e){return console.log(e.message),!1}},mGetCurrentSelections:async function(){let e=await getCurrSelectionFields(),t=e.qSelectionObject.qSelections.map(function(e){return e.qField});return{selections:e.qSelectionObject.qSelections,fields:t}}},...{mGetTablesAndFields:async function(){let e=await this.getTablesAndKeys({},{},0,!0,!1),t=[];for(let i of e.qtr)for(let e of i.qFields)t.push({table:i.qName,field:e.qName});return t},mGetTables:async function(){let e=await this.getTablesAndKeys({},{},0,!0,!1),t=[];for(let i of e.qtr)t.push(i.qName);return t},mGetFields:async function(){let e=await this.getTablesAndKeys({},{},0,!0,!1),t=[];for(let i of e.qtr)for(let e of i.qFields)t.push(e.qName);return t}},...{mGetAllVariables:async function({showSession:t=!1,showConfig:i=!1,showReserved:a=!1}={}){let n=e.variableList;n.qShowSession=t,n.qShowConfig=i,n.qShowReserved=a;let s=await this.createSessionObject(n);return(await s.getLayout()).qVariableList.qItems},mUpdateVariable:async function(e){let t=await this.getVariableById(e.qInfo.qId);return await t.setProperties(e)},mCreateVariable:async function({variableName:e,variableComment:t="",variableDefinition:i}){let a={qInfo:{qType:"variable"},qName:e,qComment:t,qDefinition:i};return await this.createVariableEx(a)}}}}});
//# sourceMappingURL=enigma-mixin.min.js.map
