!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self)["enigma-mixin"]=t()}(this,function(){"use strict";var e={sessionList:{qInfo:{qId:"",qType:"SessionLists"},qSelectionObjectDef:{}},variableList:{qInfo:{qType:"VariableList"},qVariableListDef:{qType:"variable"}}};async function t(t){try{let r=await t.createSessionObject(e.sessionList);return await r.getLayout()}catch(e){return{error:e.message}}}return{types:["Doc"],init(e){},extend:{...{mGetSelectionsCurr:async function(){try{let e=await t(this),r=e.qSelectionObject.qSelections.map(function(e){return e.qField});return{selections:e.qSelectionObject.qSelections,fields:r}}catch(e){return{error:e.message}}},mGetSelectionsCurrNative:async function(){try{return await t(this)}catch(e){return{error:e.message}}},mSelectInField:async function({fieldName:e,values:t,toggle:r=!1}){try{let a=await this.getField(e),n=t.map(function(e){return{qText:e}});try{return await a.selectValues({qFieldValues:n,qToggleMode:r})}catch(e){return{error:e.message}}}catch(e){return{error:e.message}}}},...{mGetTablesAndFields:async function(){try{let e=await this.getTablesAndKeys({},{},0,!0,!1),t=[];if(0==e.qtr.length)return t;for(let r of e.qtr)for(let e of r.qFields)t.push({table:r.qName,field:e.qName});return t}catch(e){return{error:e.message}}},mGetTables:async function(){try{let e=await this.getTablesAndKeys({},{},0,!0,!1),t=[];if(0==e.length)return t;for(let r of e.qtr)t.push(r.qName);return t}catch(e){return{error:e.message}}},mGetFields:async function(){try{let e=await this.getTablesAndKeys({},{},0,!0,!1),t=[];for(let r of e.qtr)for(let e of r.qFields)t.push(e.qName);return t}catch(e){return{error:e.message}}}},...{mGetVariablesAll:async function({showSession:t=!1,showConfig:r=!1,showReserved:a=!1}={}){let n=e.variableList;n.qShowSession=t,n.qShowConfig=r,n.qShowReserved=a;try{let e=await this.createSessionObject(n);return(await e.getLayout()).qVariableList.qItems}catch(e){return{error:e.message}}},mUpdateVariable:async function(e){try{let t=await this.getVariableById(e.qInfo.qId);return await t.setProperties(e)}catch(e){return{error:e.message}}},mCreateVariable:async function({name:e,comment:t="",definition:r}){let a={qInfo:{qType:"variable"},qName:e,qComment:t,qDefinition:r};try{return await this.createVariableEx(a)}catch(e){return{error:e.message}}}}}}});
//# sourceMappingURL=enigma-mixin.min.js.map
